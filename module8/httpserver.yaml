apiVersion: v1
kind: ConfigMap
metadata:
  name: httpserver-config
data:
  LOG_LEVEL: "INFO"
---
apiVersion: v1
kind: Service
metadata:
  name: httpserver-k8s-service
spec:
  selector:
    app: httpserver-k8s
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: httpserver-ingress
spec:
  tls:
    - hosts:
        - httpserver.k8s.com
      secretName: httpserver-tls
  rules:
    - host: httpserver.k8s.com
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: httpserver-k8s-service
                port:
                  number: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpserver-k8s-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: httpserver-k8s
  template:
    metadata:
      labels:
        app: httpserver-k8s
    spec:
      containers:
        - name: httpserver-k8s
          image: isziyang/httpserver:v3.0
          ports:
            - containerPort: 8080
          env:
            - name: VERSION
              value: "1.0"
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: httpserver-config
                  key: LOG_LEVEL
          resources:
            limits:
              cpu: "1"
              memory: "512Mi"
            requests:
              cpu: "500m"
              memory: "256Mi"
          livenessProbe:
            httpGet:
              path: /localhost/healthz
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /localhost/healthz
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          lifecycle:
            preStop:
              exec:
                command: ["sh", "-c", "kill httpserver_k8s"]
      terminationGracePeriodSeconds: 30
